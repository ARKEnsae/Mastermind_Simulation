#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{amsfonts}
\usepackage{amsmath}

\usepackage{dsfont}
\usepackage{mathtools}
\usepackage{graphicx}
% Nouvelles fonctions
\renewcommand{\P}{\mathds{P}} %Apparement \P existe déjà ?
\newcommand\1{\mathds{1}}
\newcommand\E{\mathds{E}}
\newcommand\ud{\mathrm{d}}
\DeclareMathOperator*{\argmax}{argmax}
%Toujours charger en dernier hyperref
\usepackage{hyperref}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 0 0 0 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Note de lecture sur le papier sur l'Entropie croisée
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
CE = Cross-entropy
\end_layout

\begin_layout Standard
La CE est un modèle utilisé pour estimer des probabilités d'événements rares
 (permet d'avoir moins d'itérations que pour les méthodes classiques d'estimatio
n).
 Ce modèle peut aussi être utilisé pour résoudre des problèmes d'optimisation
 combinatoire (COPs).
 C'est fait en transformant l'optimisation 
\begin_inset Quotes fld
\end_inset

déterministe
\begin_inset Quotes frd
\end_inset

 en une optimisation 
\begin_inset Quotes fld
\end_inset

stochastique
\begin_inset Quotes frd
\end_inset

 pour ensuite utiliser les méthodes de modélisation d'événements rares.
\end_layout

\begin_layout Standard
La méthode de CE est une méthode itérative dont chaque itération peut être
 décomposée en deux étapes :
\end_layout

\begin_layout Enumerate
Génération d'un échantillon aléatoire selon un mécanisme spécifique
\end_layout

\begin_layout Enumerate
Mise à jour du paramètre de ce mécanisme en se basant sur les données qui
 donnent les meilleurs résultats.
\end_layout

\begin_layout Standard
Pour estimer des probabilités d'événements rares, on pourrait penser à la
 méthode d'
\emph on
Important sampling
\emph default
.
 Un des désavantages de cette méthode est que les paramètres optimaux (
\emph on
tilting
\emph default
) sont difficiles à obtenir.
 Au contraire, l'avantage de la méthode de CE est d'avoir une procédure
 simple pour estimer les paramètres optimaux.
\end_layout

\begin_layout Section
Exemple d'un problème d'optimisation combinatoire
\end_layout

\begin_layout Standard
On suppose que l'on a un vecteur binaire 
\begin_inset Formula $y=(y_{1},\dots,y_{n})$
\end_inset

 qu'on cherche à deviner.
 On ne connait pas 
\begin_inset Formula $y$
\end_inset

 mais on a un 
\begin_inset Quotes fld
\end_inset

oracle
\begin_inset Quotes frd
\end_inset

 qui pour chaque 
\emph on
input
\emph default
 nous donne une 
\emph on
réponse
\emph default
 ou 
\emph on
performance.

\emph default
 Par exemple : 
\begin_inset Formula $S(x)=n-\sum_{j=1}^{n}\lvert x_{j}-y_{j}\rvert$
\end_inset

 qui donne le nombre d'éléments de 
\begin_inset Formula $x=(x_{1},\dots,x_{n})$
\end_inset

 égaux à 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename boite_noire.png

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Boîte noire utilisée pour décoder le vecteur 
\begin_inset Formula $y$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Une méthode naïve est de générer des vecteur 
\begin_inset Formula $X=(X_{1},\dots,X_{n})$
\end_inset

 de façon à ce que 
\begin_inset Formula $X_{1},\dots,X_{n}$
\end_inset

 soient des Bernoulli indépendantes de paramètre 
\begin_inset Formula $p_{1},\dots,p_{n}$
\end_inset

.
 Donc 
\begin_inset Formula $X\sim\mathcal{B}(p)$
\end_inset

 et si 
\begin_inset Formula $p=y$
\end_inset

 (loi dégénérée) on a 
\begin_inset Formula $S(X)=n$
\end_inset

 et 
\begin_inset Formula $X=y$
\end_inset

.
\end_layout

\begin_layout Standard
L'algorithme de CE consiste à transformer le problème en un événement rares,
 créer une séquence de paramètres 
\begin_inset Formula $\hat{p_{0}},\hat{{p_{1}}},\dots$
\end_inset

, et des niveaux (
\emph on
levels
\emph default
) 
\begin_inset Formula $\hat{\gamma_{1}},\hat{{\gamma_{2}}},\dots$
\end_inset

 de telles sorte que 
\begin_inset Formula $\hat{\gamma_{1}},\hat{{\gamma_{2}}},\dots$
\end_inset

 converge vers la valeur optimale (ici 
\begin_inset Formula $n$
\end_inset

) et que la suite 
\begin_inset Formula $\hat{p_{0}},\hat{{p_{1}}},\dots$
\end_inset

 converge vers le paramètre optimal (ici 
\begin_inset Formula $y$
\end_inset

).
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Description de l'algorithme}
\end_layout

\end_inset

 :
\end_layout

\begin_layout Enumerate
On commence avec un certain 
\begin_inset Formula $\hat{p}_{0}$
\end_inset

, par exemple 
\begin_inset Formula $\hat{p_{0}}=(1/2,\dots,1/2)$
\end_inset

 et 
\begin_inset Formula $t:=1$
\end_inset


\end_layout

\begin_layout Enumerate
On génére des échantillons 
\begin_inset Formula $X_{1},\dots,X_{N}$
\end_inset

 selon une loi de bernoulli de paramètre 
\begin_inset Formula $\hat{p}_{t-1}$
\end_inset

.
 On calcule le score 
\begin_inset Formula $S(X_{i})$
\end_inset

 et on trie ces données du plus petit au plus grand : 
\begin_inset Formula $S_{(1)}\leq\dots\leq S_{(N)}$
\end_inset

.
 On note 
\begin_inset Formula $\hat{\gamma}_{t-1}$
\end_inset

 le quantile 
\begin_inset Formula $1-\rho$
\end_inset

 du score : 
\begin_inset Formula $\hat{\gamma}_{t-1}=S_{\lceil(1-\rho)N\rceil}$
\end_inset

 .
\end_layout

\begin_layout Enumerate
On utilise le même échantillon pour calculer 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\hat{p}_{t}=(\hat{p}_{t,1},\dots\hat{p}_{t,n})$
\end_inset

 avec la formule : 
\begin_inset Formula 
\[
\hat{p}_{t,j}=\frac{{\sum_{i=1}^{N}\1_{S(X_{i})\geq\hat{{\gamma}}_{t}}}\1_{X_{i,j}=1}}{{\sum_{i=1}^{N}\1_{S(X_{i})\geq\hat{{\gamma}}_{t}}}}
\]

\end_inset

Cette condition s’interprète de la façon suivante : pour mettre à jour la
 
\begin_inset Formula $j$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ieme
\end_layout

\end_inset

 probabilité, on compte le nombre de vecteurs de 
\begin_inset Formula $X$
\end_inset

 qui ont un score plus grand que 
\begin_inset Formula $\hat{\gamma}_{t}$
\end_inset

 et dont la 
\begin_inset Formula $j$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ieme
\end_layout

\end_inset

 composante est égale à 1 et on divise ce nombre par le nombre de vecteurs
 de 
\begin_inset Formula $X$
\end_inset

 qui ont un score plus grand que 
\begin_inset Formula $\hat{\gamma}_{t}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
On arrête si on rencontre le critère d'arrêt (
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\hat{\gamma}_{t}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
 constant ou 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\hat{p}_{t}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
 loi dégénérée), sinon 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $t:=t+1$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Section
La méthode CE pour les événements rares
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Soit 
\begin_inset Formula $X=(X_{1},\dots,X_{n})$
\end_inset

 un vecteur aléatoire qui prend ses valeurs dans 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathcal{X}$
\end_inset

, 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $\{f(\cdot;v),\,v\in\mathcal{V}\}$
\end_inset

 une famille de densités de probabilités – 
\emph on
probability density functions
\emph default
 (pdfs) – sur 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathcal{X}$
\end_inset

 associés à une mesure 
\begin_inset Formula $\nu$
\end_inset

(mesure de Lebesgue ou mesure de comptage).
 Pour toute fonction mesurable 
\begin_inset Formula $H$
\end_inset

 on a : 
\begin_inset Formula 
\[
\E H(X)=\int_{\mathcal{X}}H(x)f(x;v)\nu(\ud x)
\]

\end_inset


\end_layout

\begin_layout Standard
Soit 
\begin_inset Formula $S$
\end_inset

 une fonction réelle sur 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathcal{X}$
\end_inset

, on suppose que l'on s'intéresse à la probabilité que 
\begin_inset Formula $S(x)$
\end_inset

 soit supérieure à un certain nombre 
\begin_inset Formula $\gamma$
\end_inset

 sous la densité 
\begin_inset Formula $f(\cdot,u)$
\end_inset

.
 Cette probabilité s'écrit :
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula 
\[
l=\P_{u}(S(X)\geq\gamma)=\E_{u}\1_{\{S(x)\geq\gamma\}}
\]

\end_inset


\end_layout

\begin_layout Standard
Si cette probabilité est petite (plus petite que 
\begin_inset Formula $10^{-5})$
\end_inset

, 
\begin_inset Formula $\left\{ S(X)\geq\gamma\right\} $
\end_inset

 est appelé événement rare (
\emph on
rare event
\emph default
).
 Une façon simple d'estimer 
\begin_inset Formula $l$
\end_inset

 est d'utiliser brutalement une méthode de simulation de Monte-Carlo : on
 échantillonne 
\begin_inset Formula $X_{1},\dots,X_{N}$
\end_inset

 de loi 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f(\cdot,u)$
\end_inset

 et ensuite 
\begin_inset Formula 
\[
\frac{1}{N}\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\gamma\}}
\]

\end_inset


\end_layout

\begin_layout Standard
nous donne un estimateur sans biais de 
\begin_inset Formula $l$
\end_inset

.
 Le problème est que 
\begin_inset Formula $\left\{ S(X)\geq\gamma\right\} $
\end_inset

 est un événement rare : il faut beaucoup de simulations pour estimater
 avec précisions 
\begin_inset Formula $l$
\end_inset

 (i.e.
 : avec une faible erreur ou un petit intervalle de confiance).
\end_layout

\begin_layout Standard
Une façon alternative est d'utiliser l'important sampling : on tire un échantill
on 
\begin_inset Formula $X_{1},\dots,X_{N}$
\end_inset

 à partir d'une densité 
\begin_inset Formula $g$
\end_inset

 sur 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathcal{X}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
 d'important sampling et on calcule 
\begin_inset Formula $l$
\end_inset

 en utilisation l'estimateur du rapport de vraisemblance – 
\emph on
likelihood ratio
\emph default
 (LR) :
\begin_inset Formula 
\[
\hat{l}=\frac{1}{N}\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\gamma\}}\frac{f(X_{i};u)}{g(X_{i})}
\]

\end_inset


\end_layout

\begin_layout Standard
La meilleure façon d'estimer 
\begin_inset Formula $l$
\end_inset

 est d'utiliser la densité 
\begin_inset Formula 
\[
g^{*}(x):=\frac{{\1_{\left\{ S(x)\geq\gamma\right\} }f(x;u)}}{l}\implies\1_{\left\{ S(X_{i})\geq\gamma\right\} }\frac{f(X_{i};u)}{g(X_{i})}=l
\]

\end_inset


\end_layout

\begin_layout Standard
Et donc l'estimateur précédent est de variance nulle.
 Le problème évident est que 
\begin_inset Formula $g^{*}$
\end_inset

 dépend de 
\begin_inset Formula $l$
\end_inset

.
 De plus il est plus pratique de choisir 
\begin_inset Formula $g$
\end_inset

 dans 
\begin_inset Formula $\{f(\cdot;v),\,v\in\mathcal{V}\}$
\end_inset

 .
 L'idée est de choisir un paramètre de référence – 
\emph on
reference parameter
\emph default
 ou 
\emph on
tilting parameter
\emph default
 – 
\begin_inset Formula $v$
\end_inset

 de façon à ce que la distance entre 
\begin_inset Formula $g^{*}$
\end_inset

 et 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f(\cdot,v)$
\end_inset

 soit minimale.
 La distance entre deux densités 
\begin_inset Formula $g$
\end_inset

 et 
\begin_inset Formula $h$
\end_inset

 qui est utilisée est la distance de 
\family default
\series default
\shape default
\size default
\emph on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
Kullback-Leibler
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
, aussi appelée 
\family default
\series default
\shape default
\size default
\emph on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
cross-entropy
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
 entre 
\begin_inset Formula $g$
\end_inset

 et 
\begin_inset Formula $h$
\end_inset

 :
\begin_inset Formula 
\[
\mathfrak{D}(g,h)=\E_{g}\ln\frac{g(X)}{h(X)}=\int g(x)\ln g(x)\ud x-\int g(x)\ln h(x)\ud x
\]

\end_inset


\end_layout

\begin_layout Standard
Minimiser la distance de Kullback-Leibler entre 
\begin_inset Formula $g^{*}$
\end_inset

 et 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f(\cdot,v)$
\end_inset

 est équivalent à choisir 
\begin_inset Formula $v$
\end_inset

 qui minimise 
\begin_inset Formula $-\int g^{*}(x)\ln f(x;v)\ud x$
\end_inset

, soit à résoudre le problème de maximisation :
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula 
\[
\underset{v}{{\max}}\int g^{*}(x)\ln f(x;v)\ud x\iff\underset{v}{{\max}}\int\frac{{\1_{\left\{ S(x)\geq\gamma\right\} }f(x;u)}}{l}\ln f(x;v)\ud x
\]

\end_inset


\end_layout

\begin_layout Standard
On obtient le programme :
\begin_inset Formula 
\[
\underset{v}{{\max}\;}D(v)=\underset{v}{{\max}}\;\E_{u}\1_{\left\{ S(X)\geq\gamma\right\} }\ln f(X;v)
\]

\end_inset


\end_layout

\begin_layout Standard
On peut encore une fois utiliser l'important sampling avec une nouvelle
 mesure 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f(\cdot,w)$
\end_inset

 et le problème précédent devient :
\begin_inset Formula 
\[
\underset{v}{\max}\;D(v)=\underset{v}{\max}\;\E_{w}\1_{\left\{ S(X)\geq\gamma\right\} }W(X;u,w)\ln f(X;v)
\]

\end_inset


\end_layout

\begin_layout Standard
Avec 
\begin_inset Formula ${\displaystyle {\displaystyle W(x;u,w})=\frac{f(x;u)}{f(x;w)}}$
\end_inset

 le rapport de vraisemblance, en 
\begin_inset Formula $x$
\end_inset

, entre 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f(\cdot,u)$
\end_inset

 et 
\begin_inset Formula $f(\cdot,w)$
\end_inset

.
 La solution optimale s'écrit :
\begin_inset Formula 
\begin{equation}
v^{*}=\underset{v}{\argmax}\;\E_{w}\1_{\left\{ S(X)\geq\gamma\right\} }W(X;u,w)\ln f(X;v)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
On estime 
\begin_inset Formula $v^{*}$
\end_inset

 à partir du programme stochastique – 
\emph on
stochastic counterpart
\emph default
 – suivant :
\begin_inset Formula 
\begin{equation}
\underset{v}{\max}\;\hat{D}(v)=\underset{v}{\max}\frac{1}{N}\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\gamma\}}W(X_{i};u,w)\ln f(X_{i};v)\label{eq:stochasticcounterpart}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Avec 
\begin_inset Formula $X_{1},\dots,X_{N}$
\end_inset

 tirés aléatoirement selon 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f(\cdot,w)$
\end_inset

.
 Dans les applications classiques, 
\begin_inset Formula $\hat{D}$
\end_inset

 est différentable et convexe en 
\begin_inset Formula $v$
\end_inset

, la solution de 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq:stochasticcounterpart}
\end_layout

\end_inset

 peut alors être obtenue en résolvant les équations :
\begin_inset Formula 
\begin{equation}
\frac{1}{N}\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\gamma\}}W(X_{i};u,w)\nabla_{v}\ln f(X_{i};v)=0
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Remarque}
\end_layout

\end_inset

 : Pour que le programme de CE 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq:stochasticcounterpart}
\end_layout

\end_inset

 soit utile, il faut que la probabilité de l'événement 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $\left\{ S(X)\geq\gamma\right\} $
\end_inset

 ne soit pas trop petite, sinon les 
\begin_inset Formula $\1_{\{S(X_{i})\geq\gamma\}}$
\end_inset

 seront souvent égales à 0.
 
\end_layout

\begin_layout Standard
Pour surmonter cette difficulté, on utilise un algorithme multi-niveau –
 
\emph on
multi-level algorithm
\emph default
.
 L'idée est de construire une suite de paramètres de références 
\begin_inset Formula $(v_{t})_{t\geq0}$
\end_inset

 et une suite de niveaux 
\begin_inset Formula $(\gamma_{t})_{t\geq1}$
\end_inset

, l'algorithme consiste à construire itérativement cette suite.
 L'idée est de choisir 
\begin_inset Formula $\hat{v}_{0}=u$
\end_inset

 et de prendre 
\begin_inset Formula $\hat{\gamma}_{1}$
\end_inset

 plus petit que 
\begin_inset Formula $\gamma$
\end_inset

 : 
\begin_inset Formula $\hat{v}_{1}$
\end_inset

 rendra l'événement 
\begin_inset Formula $\left\{ S(X)\geq\gamma\right\} $
\end_inset

 un peu moins rare, donc 
\begin_inset Formula $\hat{\gamma}_{2}$
\end_inset

 peut être plus proche de 
\begin_inset Formula $\gamma$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Description de l'algorithme de CE pour la simulation d'événements
 rares} :
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
On pose 
\begin_inset Formula $\hat{v}_{0}=u$
\end_inset

 , 
\begin_inset Formula $t=1$
\end_inset

.
\end_layout

\begin_layout Enumerate
On génère un échantillon 
\begin_inset Formula $X_{1},\dots,X_{N}$
\end_inset

 de loi 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f(\cdot,v_{t-1})$
\end_inset

, on calcule le quantile 
\begin_inset Formula $(1-\rho)$
\end_inset

 de la fonction score qui donne 
\begin_inset Formula $\hat{\gamma}_{t}$
\end_inset

 :
\begin_inset Formula 
\[
\hat{\gamma}_{t}=S_{\lceil(1-\rho)N\rceil}
\]

\end_inset


\end_layout

\begin_layout Enumerate
On utilise le 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{même}
\end_layout

\end_inset

 échantillon 
\begin_inset Formula $X_{1},\dots,X_{N}$
\end_inset

 pour résoudre le problème stochastique :
\begin_inset Formula 
\begin{equation}
\hat{v}_{t}=\underset{v}{\argmax}\;\hat{D}(v)=\underset{v}{\argmax}\frac{1}{N}\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}W(X_{i};u,\hat{v}_{t-1})\ln f(X_{i};v)\label{}
\end{equation}

\end_inset

La solution nous donne 
\begin_inset Formula $\hat{v}_{t}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Si 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\hat{\gamma}_{t}<\gamma$
\end_inset

, 
\begin_inset Formula $t=t+1$
\end_inset

 et on recommence à l'étape 2.
 Sinon on estime la probabilité 
\begin_inset Formula $l$
\end_inset

 en utilisant le rapport de vraisemblance 
\begin_inset Formula 
\[
\hat{l}=\frac{1}{N_{1}}\sum_{i=1}^{N_{1}}\1_{\{S(X_{i})\geq\gamma_{t}\}}W(X_{i};u,\hat{v}_{T})
\]

\end_inset

Avec 
\begin_inset Formula $T$
\end_inset

 le nombre total d'itération.
\end_layout

\end_inset


\end_layout

\begin_layout Section
La méthode de CE pour l'optimisation combinatoire
\end_layout

\begin_layout Subsection
Le problème d'optimisation combinatoire
\end_layout

\begin_layout Standard
On considère le problème de maximisation suivant : soit 
\begin_inset Formula $\mathcal{X}$
\end_inset

 un ensemble fini d'états (
\emph on
states
\emph default
) et 
\begin_inset Formula $S$
\end_inset

 une fonction de performance.
 On cherche à trouver le maximum de 
\begin_inset Formula $S$
\end_inset

 sur 
\begin_inset Formula $\mathcal{X}$
\end_inset

 et les points pour lesquels ce maximum est atteint.
 Si on note 
\begin_inset Formula $\gamma^{*}$
\end_inset

 ce maximum, on cherche donc :
\begin_inset Formula 
\begin{equation}
S(x^{*})=\gamma^{*}=\underset{x\in\mathcal{X}}{{\max}}S(x)\label{eq:defscore}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Le point de départ de la méthode de CE est d'associer un problème d'estimation
 avec un problème d'optimisation précédent.
 Pour cela on définit un ensemble d'indécatrices 
\begin_inset Formula $\1_{{\left\{ S(x)\geq\gamma\right\} }}$
\end_inset

 sur 
\begin_inset Formula $\mathcal{X}$
\end_inset

 pour plusieurs niveaux 
\begin_inset Formula $\gamma\in\mathbb{R}$
\end_inset

.
\end_layout

\begin_layout Standard
On note 
\begin_inset Formula $\{f(\cdot;v),\,v\in\mathcal{V}\}$
\end_inset

 une famille discrète de probabilités sur 
\begin_inset Formula $\mathcal{X}$
\end_inset

, paramétrée par un paramètre vectoriel 
\begin_inset Formula $v$
\end_inset

.
 
\end_layout

\begin_layout Standard
Pour un certain 
\begin_inset Formula $u\in\mathcal{V}$
\end_inset

 on associer le problème de maximisation 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq:defscore}
\end_layout

\end_inset

, le problème d'estimation du nombre
\begin_inset Formula 
\begin{equation}
l(\gamma)=\mathbb{P}_{u}(S(X)\geq\gamma)=\sum_{x}\1_{{S(x)\geq\gamma}}f(x;u)=\mathbb{E}_{u}\1_{{S(x)\geq\gamma}}\label{eq:loss}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
C'est le problème stochastique associé – 
\emph on
associated stochastic problem
\emph default
 (ASP).
 Cela permet de voire l'analogie avec un problème d'estimation d'une probabilité
 d'événement rare.
 En effet, si 
\begin_inset Formula $f(\cdot;u)$
\end_inset

 est la densité uniforme sur 
\begin_inset Formula $\mathcal{X}$
\end_inset

 alors 
\begin_inset Formula $l(\gamma^{*})=f(x^{*};u)=\frac{1}{\lvert\mathcal{X}\rvert}$
\end_inset

 et donc si 
\begin_inset Formula $\mathcal{X}$
\end_inset

 contient beaucoup d'événements, 
\begin_inset Formula $S(X)\geq\gamma^{*}$
\end_inset

est un événement rare.
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Description de l'algorithme de CE pour l'optimisation} :
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Il faut définir en avance 
\begin_inset Formula $\hat{v}_{0}$
\end_inset

, la taille de l'échantillon 
\begin_inset Formula $N$
\end_inset

 et le nombre 
\begin_inset Formula $\rho$
\end_inset

 (
\begin_inset Formula $10\%$
\end_inset

 dans notre projet sur Master Mind)
\end_layout

\begin_layout Enumerate
On prend 
\begin_inset Formula $\hat{v}_{0}$
\end_inset

 fixé arbitrairement , 
\begin_inset Formula $t=1$
\end_inset

.
\end_layout

\begin_layout Enumerate
On génère un échantillon 
\begin_inset Formula $X_{1},\dots,X_{N}$
\end_inset

 de loi 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f(\cdot,v_{t-1})$
\end_inset

, on calcule le quantile 
\begin_inset Formula $(1-\rho)$
\end_inset

 de la fonction score qui donne 
\begin_inset Formula $\hat{\gamma}_{t}$
\end_inset

 :
\begin_inset Formula 
\[
\hat{\gamma}_{t}=S_{\lceil(1-\rho)N\rceil}
\]

\end_inset

 Si 
\begin_inset Formula $\hat{\gamma}_{t}\geq\gamma$
\end_inset

 on prend 
\begin_inset Formula $\hat{\gamma}_{t}=\gamma$
\end_inset

.
\end_layout

\begin_layout Enumerate
On utilise le 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{même}
\end_layout

\end_inset

 échantillon 
\begin_inset Formula $X_{1},\dots,X_{N}$
\end_inset

 pour résoudre le problème stochastique (avec 
\begin_inset Formula $W=1$
\end_inset

) :
\begin_inset Formula 
\begin{equation}
\hat{v}_{t}=\underset{v}{\argmax}\;\hat{D}(v)=\underset{v}{\argmax}\frac{1}{N}\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\ln f(X_{i};v)\label{eq:maxopti}
\end{equation}

\end_inset


\end_layout

\begin_layout Enumerate
Si pour un certain 
\begin_inset Formula $t\geq d$
\end_inset

, (par exemple 
\begin_inset Formula $d=5$
\end_inset

), on a 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
:
\begin_inset Formula 
\[
\hat{\gamma}_{t}=\hat{\gamma}_{t-1}=\dots=\hat{\gamma}_{t-d}
\]

\end_inset

alors on arrête l'algorithme.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Smoothed updating
\end_layout

\begin_layout Standard
Plutôt que de mettre à jour directement 
\begin_inset Formula $\hat{v}_{t-1}$
\end_inset

 à partir de la formule du problème 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq:maxopti}
\end_layout

\end_inset

, on réalise souvent une mise à jour lissée – 
\family default
\series default
\shape default
\size default
\emph on
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
smoothed updating
\emph default
 :
\begin_inset Formula 
\begin{equation}
\hat{v}_{t}=\alpha\hat{w}_{t}+(1-\alpha)\hat{v}_{t-1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
avec 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\hat{w}_{t}$
\end_inset

 la valeur obtenue en résolvant le problème 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq:maxopti}
\end_layout

\end_inset

 (
\begin_inset Formula $\hat{w}_{t}$
\end_inset

 correspondait donc à la précédente valeur qu'on utilisait avant pour 
\begin_inset Formula $\hat{v}_{t}$
\end_inset

 ).
 C'est en particulier pertinent pour les problèmes d'optimisaiton avec des
 variables discrètes : cela permet d'éviter l'occurence de 0 ou de 1 dans
 les paramètres des vecteurs.
 En effet, le problème est que dès lors qu'on a un 0 ou un 1, il le reste
 souvent pour toujours, ce qui a des effets indésirables.
 On trouve empiriquement que 
\begin_inset Formula $0,4\leq\alpha\leq0,9$
\end_inset

 donne des meilleurs résultats.
\end_layout

\begin_layout Standard
Si 
\begin_inset Formula $\alpha=1$
\end_inset

 on retrouve l'algorithme précédent.
\end_layout

\begin_layout Standard
Dans beaucoup d'applications on observe une convergence numérique de 
\begin_inset Formula $f(\cdot;\hat{v}_{t})$
\end_inset

 vers une mesure dégénérée (une mesure de Dirac), c'est-à-dire que l'on
 affecte toute la masse de probabilité à un seul état 
\begin_inset Formula $x_{T}$
\end_inset

 pour lequel, par définition, on a 
\begin_inset Formula $S(x_{T})\geq\hat{\gamma}_{T}$
\end_inset

.
\end_layout

\begin_layout Subsection
Estimation du maximum de vraisemblance
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
label{sec:emv}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Le problème 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq:maxopti}
\end_layout

\end_inset

 est étroitement lié au problème de maximisation de la vraisemblance.
 En effet, le problème de maximisasion de vraisemblance revient à a
\begin_inset Formula 
\begin{equation}
\hat{v}_{t}=\underset{v}{\argmax}\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\ln f(X_{i};v)\label{eq:emv}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
La seule différence avec le problème 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{eq:maxopti}
\end_layout

\end_inset

 est la présence de 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $\1_{{\left\{ S(X_{i})\geq\hat{\gamma}_{t}\right\} }}$
\end_inset

.
 Le problème d'optimisation combinatoire peut être réécrit en : 
\begin_inset Formula 
\begin{equation}
\hat{v}_{t}=\underset{v}{\argmax}\sum_{X_{i}\,:\,S(X_{i})\geq\hat{\gamma}_{t}}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\ln f(X_{i};v)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
En d'autres termes, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\hat{v}_{t}$
\end_inset

 est égal à l'estimateur de maximum de vraisemblance de 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $\hat{v}_{t-1}$
\end_inset

 calculé uniquement à partir des vecteurs 
\begin_inset Formula $X_{i}$
\end_inset

 qui ont une performance supérieure ou égale à 
\begin_inset Formula $\hat{\gamma}_{t}$
\end_inset

.
\end_layout

\begin_layout Subsection
Paramètres
\end_layout

\begin_layout Standard
Le choix de la taille de l'échantillon 
\begin_inset Formula $N$
\end_inset

 et du paramètre 
\begin_inset Formula $\rho$
\end_inset

 dépendent de la taille du problème et du nombre de paramètres dans le problème
 de maximisation.
 
\end_layout

\begin_layout Standard
En particulier dans les problème de type s
\emph on
tochastic node networks
\emph default
 (SNN), on prend généralement 
\begin_inset Formula $N=cn$
\end_inset

 avec 
\begin_inset Formula $n$
\end_inset

 le nombre de 
\emph on
nodes
\emph default
 et 
\begin_inset Formula $c$
\end_inset

 une constante (
\begin_inset Formula $c>1$
\end_inset

), souvent 
\begin_inset Formula $5\leq c\leq10$
\end_inset

.
\end_layout

\begin_layout Standard
Dans les problème de type 
\emph on
stochastic edge networks
\emph default
 (SEN) on prend généralement 
\begin_inset Formula $N=cn^{2}$
\end_inset

 avec 
\begin_inset Formula $n^{2}$
\end_inset

 le nombre de 
\emph on
edges
\emph default
 dans le réseau.
 La taille de l'échantillon est donc liée au nombre de paramètres à estimer
 (
\begin_inset Formula $n$
\end_inset

 et 
\begin_inset Formula $n^{2}$
\end_inset

).
\end_layout

\begin_layout Standard
Pour estimer 
\begin_inset Formula $k$
\end_inset

 paramètres, il faut prendre une taille d'échantillon 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{au minimum}
\end_layout

\end_inset

 égale à 
\begin_inset Formula $N=ck$
\end_inset

 avec 
\begin_inset Formula $c>1$
\end_inset

.
\end_layout

\begin_layout Standard
Pour 
\begin_inset Formula $\rho$
\end_inset

 il est souvent conseillé de prendre 
\begin_inset Formula $\rho$
\end_inset

 autour de 0,01 si 
\begin_inset Formula $n$
\end_inset

 est grand (
\begin_inset Formula $n\geq100$
\end_inset

) et de prendre un 
\begin_inset Formula $\rho$
\end_inset

 plus grand, 
\begin_inset Formula $\rho\simeq\frac{\ln(n)}{n}$
\end_inset

 pour 
\begin_inset Formula $n<100$
\end_inset

.
\end_layout

\begin_layout Standard
Les paramètres 
\begin_inset Formula $N$
\end_inset

 et 
\begin_inset Formula $\rho$
\end_inset

 peuvent aussi être déterminés de façon itérative : c'est ce qui est fait
 dans l'algorithme FACE ou dans Homem-de-Mello, T.
 and Rubinstein, R.
 (2002).
 Rare event estimation for static models via cross-entropy and importance
 sampling.
 Submitted for publication.
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Dans notre cas, il faut donc prend 
\begin_inset Formula $N=c\times m\times n$
\end_inset

 avec 
\begin_inset Formula $c>1$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Application au mastermind
\end_layout

\begin_layout Standard
Dans notre projet, on a 
\begin_inset Formula $n$
\end_inset

 boules et 
\begin_inset Formula $m$
\end_inset

 couleurs.
 On numérote les couleurs de 1 à 
\begin_inset Formula $m$
\end_inset

.
\end_layout

\begin_layout Standard
On a donc 
\begin_inset Formula $\mathcal{X}=\left\{ 1,2,\dots,m\right\} ^{n}$
\end_inset

 .
\end_layout

\begin_layout Standard
Les composantes du vecteur 
\begin_inset Formula $X=(X_{1},\dots,X_{n})\in\mathcal{X}$
\end_inset

 sont tirées aléatoirement de façons à ce que leur distribution soit déterminée
 par une suite 
\begin_inset Formula $p_{1},\dots,p_{n}$
\end_inset

 de vecteurs de probabilités, la 
\begin_inset Formula $j$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ieme
\end_layout

\end_inset

 composante de 
\begin_inset Formula $p_{i}$
\end_inset

 étant égale à 
\begin_inset Formula $p_{ij}=\P(X_{i}=j)$
\end_inset

.
 On peut représenter cette loi par une matrice 
\begin_inset Formula 
\[
P=\left(p_{i,j}\right)_{i,j}=\left(\P(X_{i}=j)\right)_{i,j}\in\left\{ \text{{matrices\;stochastiques\;de\;}}\mathcal{M}_{n,m}(\mathbb{R})\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
La densité s'écrit :
\begin_inset Formula 
\[
f(X;p)=\prod_{i=1}^{n}\prod_{j=1}^{m}p_{i,j}^{\1_{\left\{ X_{i}=j\right\} }}
\]

\end_inset


\end_layout

\begin_layout Standard
Il vient :
\begin_inset Formula 
\[
\ln f(X;p)=\sum_{i=1}^{n}\sum_{j=1}^{m}\1_{\left\{ X_{i}=j\right\} }\ln p_{i,j}
\]

\end_inset


\end_layout

\begin_layout Standard
On suppose dans un premier temps qu'il n'y a pas de lien entre les 
\begin_inset Formula $p_{i,j}$
\end_inset

 (comme si on n'avait pas 
\begin_inset Formula $\sum_{j=1}^{m}p_{i,j}=1$
\end_inset

) : 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{\partial}{\partial p_{k,l}}\ln f(X;p)=\frac{\partial}{\partial p_{k,l}}\sum_{j=1}^{m}\1_{\left\{ X_{k}=j\right\} }\ln p_{k,j}=\frac{\1_{\left\{ X_{k}=l\right\} }}{p_{k,l}}
\]

\end_inset


\end_layout

\begin_layout Standard
On prend maintenant un échantillon de taille 
\begin_inset Formula $N$
\end_inset

, 
\begin_inset Formula $X_{1},\dots,X_{N}\overset{i.i.d}{\sim}X$
\end_inset

 et on note 
\begin_inset Formula $X_{i}=(X_{i,1},\dots,X_{i,n})\in\mathcal{X}$
\end_inset

.
 Le programme de maximisation peut s'écrire comme un problème de maximisation
 sous contrainte :
\begin_inset Formula 
\[
\begin{cases}
\underset{p_{i,j}}{\max} & \sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\ln f(X_{i};v)\\
s.c & \forall i\::\:\sum_{j=1}^{m}p_{i,j}=1
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Le Lagrangien s'écrit :
\begin_inset Formula 
\[
\mathcal{L}=\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\ln f(X_{i};v)+\sum_{i=1}^{n}\lambda_{i}\left(\sum_{j=1}^{m}p_{i,j}-1\right)
\]

\end_inset


\end_layout

\begin_layout Standard
La condition d'optimalité en 
\begin_inset Formula $p_{k,l}$
\end_inset

 :
\begin_inset Formula 
\[
\frac{\partial}{\partial p_{k,l}}\mathcal{L}=0\implies\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\frac{\1_{\left\{ X_{i,k}=l\right\} }}{p_{k,l}}-\lambda_{k}=0
\]

\end_inset


\end_layout

\begin_layout Standard
Soit : 
\begin_inset Formula 
\[
\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\1_{\left\{ X_{i,k}=l\right\} }=\lambda_{k}p_{k,l}
\]

\end_inset


\end_layout

\begin_layout Standard
En sommant sur 
\begin_inset Formula $l$
\end_inset

 et en utilisant la condition sur les 
\begin_inset Formula $p_{i,j}$
\end_inset

 , il vient :
\begin_inset Formula 
\[
\lambda_{k}=\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\underbrace{\sum_{l=1}^{m}\1_{\left\{ X_{i,k}=l\right\} }}_{=1}
\]

\end_inset


\end_layout

\begin_layout Standard
D'où la formule de mise à jour :
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Formula 
\[
p_{k,l}=\frac{\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\1_{\left\{ X_{i,k}=l\right\} }}{\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}}
\]

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Algorithme de Metropolis
\end_layout

\begin_layout Subsection
Intuition de l'algorithme
\end_layout

\begin_layout Standard
Le but de l'algorithme de Metropolis-Hastings est de générer des échantillons
 d'une distribution 
\begin_inset Formula $P(x)$
\end_inset

, sachant que l'on connait une fonction 
\begin_inset Formula $f(x)$
\end_inset

 proportionnelle à la densité de 
\begin_inset Formula $P$
\end_inset

.
 Remarquons qu'il suffit que 
\begin_inset Formula $f(x)$
\end_inset

 soit proportionnelle à la densité de 
\begin_inset Formula $P$
\end_inset

, ce n'est pas utile qu'il y ait égalité, c'est notamment utile parce que
 le calcul du facteur de normalisation est souvent difficile.
\end_layout

\begin_layout Standard
Pour générer 
\begin_inset Formula $P(x)$
\end_inset

 on va construire itérativement une chaîne de Markov qui converge une asymptotiq
uement vers une unique loi stationnaire 
\begin_inset Formula $\pi(x)=P(x)$
\end_inset

.
\end_layout

\begin_layout Standard
Une chaîne de Markov est uniquement définie par sa probabilité de transition
 
\begin_inset Formula $P(x'\lvert x)$
\end_inset

 qui représente la probabilité d'arriver à l'état 
\begin_inset Formula $x$
\end_inset

 sachant que l'on est à l'état 
\begin_inset Formula $x'$
\end_inset

.
 On a une unique distribution stationnaire si on a les deux conditions suivantes
 :
\end_layout

\begin_layout Enumerate
Existence : une condition suffisante est que la condition de balance soit
 vérifiée : 
\begin_inset Formula $\pi(x)P(x'\lvert x)=\pi(x')P(x\lvert x')$
\end_inset


\end_layout

\begin_layout Enumerate
Unicité : garantie par l'ergodicité des processus markovien vérifiée lorsque
 le processus est aperiodique (on ne retourne pas au même état à des intervalles
 fixes) et positive récurrente (on retourne au même étant en un temps fini).
\end_layout

\begin_layout Subsection
Algorithme
\end_layout

\begin_layout Standard
L'algorithme de Metropolis-Hastings est le suivant :
\end_layout

\begin_layout Enumerate
Initialisation :
\end_layout

\begin_deeper
\begin_layout Enumerate
On choisit un état initial 
\begin_inset Formula $x_{0}$
\end_inset


\end_layout

\begin_layout Enumerate
On fixe 
\begin_inset Formula $t=0$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Itération :
\end_layout

\begin_deeper
\begin_layout Enumerate
On prend une densité de probabilité aléatoire arbitraire 
\begin_inset Formula $g(x'|x_{t})$
\end_inset

 qui suggère un nouveau candidat pour le prochain échantillon 
\begin_inset Formula $x'$
\end_inset

 sachant que l'on est à l'état 
\begin_inset Formula $x_{t}$
\end_inset

.
 La fonction 
\begin_inset Formula $g$
\end_inset

 appelée 
\emph on
proposal density
\emph default
 ou 
\emph on
jumping distribution
\emph default
.
 
\end_layout

\begin_layout Enumerate
On calcule la probabilité d'acceptation :
\begin_inset Formula 
\[
A(x',x_{t})=\min\left(1,\,\frac{P(x')}{P(x_{t})}\frac{g(x_{t}|x')}{g(x'|x_{t})}\right)
\]

\end_inset

Remarquons que si 
\begin_inset Formula $g$
\end_inset

 est symétrique (i.e.
 
\begin_inset Formula $g(x|y)=g(y|x)$
\end_inset

) alors le rapport précédent se simplifie.
 Un cas clasique est de choisir 
\begin_inset Formula $g(x|y)$
\end_inset

 comme étant une distribution gaussienne centrée en 
\begin_inset Formula $y$
\end_inset

 : les points proches de 
\begin_inset Formula $y$
\end_inset

 ont plus de chances d'être visités.
\end_layout

\begin_layout Enumerate
Acceptation ou rejet :
\end_layout

\begin_deeper
\begin_layout Enumerate
Un génére une loi uniforme 
\begin_inset Formula $u\in[0,1]$
\end_inset


\end_layout

\begin_layout Enumerate
Si 
\begin_inset Formula $u\leq A(x',x_{t})$
\end_inset

 alors on accepte le nouvel état et 
\begin_inset Formula $x_{t+1}=x'$
\end_inset


\end_layout

\begin_layout Enumerate
Si 
\begin_inset Formula $u>A(x',x_{t})$
\end_inset

 on rejette le nouvel état et on garde l'ancien état 
\begin_inset Formula $x_{t+1}=x_{t}$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Incrémentation : 
\begin_inset Formula $t=t+1$
\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Interprétation dans le cas 
\begin_inset Formula $g$
\end_inset

 est symétrique
\end_layout

\begin_layout Standard
Le principe de l'algorithme est d'essayer de se déplacer aléatoirement dans
 l'espace, parfois en acceptant de se déplacer et d'autres fois en restant
 sur place (sur le même état).
 Le rapport d'acceptation 
\begin_inset Formula $A(x',x_{t})$
\end_inset

 indique la probabilité du nouvel échantillon par rapport à la situation
 actuelle, sous la distribution 
\begin_inset Formula $P(x)$
\end_inset

.
 
\end_layout

\begin_layout Standard
Si on essaye de se déplacer dans un point qui est plus probable que le point
 actuel (i.e.
 : un point qui a une plus grande densité sur 
\begin_inset Formula $P(x)$
\end_inset

) alors on va toujours accepter de ce déplacer (
\begin_inset Formula $A(x',x_{t})=1$
\end_inset

).
 Toutefois, si on essaye de de se déplacer vers un point moins probable,
 on va parfois rejeter le déplace, et plus la baisse relative de probabilité
 est grande, plus on est susceptible de rejeter le nouveau point.
\end_layout

\begin_layout Standard
Ainsi, on a tendance à rester dans des régions à haute densité de 
\begin_inset Formula $P(x)$
\end_inset

 (et à renvoyer un grand nombre d'échantillons dans ces régions), tout en
 visitant occasionnellement les régions à faible densité.
 Intuitivement, ça explique pourquoi cet algorithme marche et renvoie des
 échantillons qui suivent la distribution souhaitée 
\begin_inset Formula $P(x)$
\end_inset

.
\end_layout

\begin_layout Subsection
Désavantages de l'algorithme Metropolis–Hastings
\end_layout

\begin_layout Standard
Par rapport à d'autres algorithme du type 
\begin_inset CommandInset href
LatexCommand href
name "adaptative rejection sampling"
target "https://en.wikipedia.org/wiki/Rejection_sampling#Adaptive_rejection_sampling"
literal "false"

\end_inset

 qui génère directement des échantillons indépendants, Metropolis–Hastings
 et les autres algorithmes MCMC ont plusieurs désavantages :
\end_layout

\begin_layout Itemize
Les échantillons sont 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{corrélés}
\end_layout

\end_inset

.
 Même si à long terme il suivent bien 
\begin_inset Formula $P(x)$
\end_inset

, un ensemble d'échantillons proches sera corrélé entre eux et ne reflétera
 pas correctement la distribution.
 Cela signifie que si on souhaite générer des échantillons indépendants,
 il faut rejeter la majorité d'entre eux et par exemple ne garder que le
 
\begin_inset Formula $n$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ieme
\end_layout

\end_inset

 échantillon, pour un certain 
\begin_inset Formula $n$
\end_inset

 fixé (habituellement déterminé en examinant l'autocorrélation entre les
 échantillons adjacents).
 L'autocorrélation peut aussi être atténuée en augmentant le 
\emph on
jumping width
\emph default
 (la taille moyenne du saut, qui est liée à la variance de la distribution
 de la 
\emph on
jumping distribution
\emph default
 
\begin_inset Formula $g$
\end_inset

), mais cela va aussi augmenter la probabilité de rejet du saut.
 Une taille de saut trop grande ou trop petite va mener à une slow-mixing
 chaîne de Marking, i.e; : un ensemble d'échantillons hautement corrélés,
 de sorte qu'un très grand nombre d'échantillons sera nécessaire pour obtenir
 une estimation raisonnable des propriétés de la distribution.
\end_layout

\begin_layout Itemize
Même si la chaîne de Markov converge vers la distribution souhaitée, les
 échantillons initiaux peuvent suivre une distribution très différente,
 notamment si le point de départ se trouve dans une région à faible densité.
 En conséquence, une période de 
\emph on
burn-in 
\emph default
est nécessaire, où les échantillons initiaux sont rejetés (par exemple les
 1000 premiers).
\end_layout

\begin_layout Standard
Toutefois, la plupart des méthodes d'échantillon de rejet souffre du fléau
 de la dimension, où la probabilité de rejet augmente de façon exponentielle
 en fonction du nombre de dimensions.
 Metropolis – Hastings, ainsi que d'autres méthodes MCMC, n'ont pas ce problème
 à un tel degré et sont souvent les seules solutions disponibles lorsque
 le nombre de dimensions de la distribution à échantillonner est élevée.
 
\end_layout

\begin_layout Subsection
Application à notre projet
\end_layout

\begin_layout Subsubsection
Application de l'algorithme de Metropolis–Hastings
\end_layout

\begin_layout Standard
Dans notre projet, on prend 
\begin_inset Formula $P(x)=\exp{(−\lambda d(x,x^{*}))}$
\end_inset

 avec 
\begin_inset Formula $d(x,x^{*})$
\end_inset

 la distance de Hamming entre 
\begin_inset Formula $x$
\end_inset

 et 
\begin_inset Formula $x^{*}$
\end_inset

 (i.e.
 : le nombre de positions où les deux permutations 
\begin_inset Formula $x$
\end_inset

 et 
\begin_inset Formula $x^{*}$
\end_inset

 sont différentes).
\end_layout

\begin_layout Standard
Le mécanisme de proposition suggérer est d'inverser deux éléments d'une
 permutation : si on est à l'état 
\begin_inset Formula $x_{t}$
\end_inset

, la proposition 
\begin_inset Formula $x'$
\end_inset

 est donnée en inversant deux éléments de 
\begin_inset Formula $x_{t}$
\end_inset

.
 On a donc 
\begin_inset Formula $g$
\end_inset

 symétrique : la probabilité de proposer 
\begin_inset Formula $x$
\end_inset

 sachant que l'on est en 
\begin_inset Formula $y$
\end_inset

 est égale à la probabilité de proposer 
\begin_inset Formula $y$
\end_inset

 sachant que l'on est en 
\begin_inset Formula $x$
\end_inset

.
 
\end_layout

\begin_layout Standard
Pour l'initialisation 
\begin_inset Formula $x_{0}$
\end_inset

 il suffit de prendre une permutation aléatoire.
\end_layout

\begin_layout Standard
La probabilité d'acceptation est donc égale à
\begin_inset Formula 
\[
A(x',x_{t})=\min\left(1,\,\mathrm{e^{-\lambda(d(x',x^{*})-d(x_{t},x^{*}))}}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Remarquons (mais je ne sais pas si c'est utile) que :
\begin_inset Formula 
\[
\lvert d(x',x^{*})-d(x_{t},x^{*})\rvert\in\llbracket0,2\rrbracket
\]

\end_inset


\end_layout

\begin_layout Standard
Comme 
\begin_inset Formula $e^{0}=1$
\end_inset

, si 
\begin_inset Formula $d(x',x^{*})-d(x_{t},x^{*})\leq0$
\end_inset

, i.e.
 : dans la nouvelle proposition il y a au moins un élément mieux placé par
 rapport à l'état actuel, alors on va forcément accepter ce nouvel état.
\end_layout

\begin_layout Standard
Pour lutter contre l'autocorrélation on peut garder un échantillon sur 7
 (la corrélation entre 
\begin_inset Formula $X_{t}$
\end_inset

 et 
\begin_inset Formula $X_{t-7}$
\end_inset

 est nulle).
 Pour éviter le 
\emph on
burn-in
\emph default
 on peut aussi enlever les 1 000 premiers échantillons.
\end_layout

\begin_layout Subsubsection
Application de la méthode de cross-entropy
\end_layout

\begin_layout Standard
Qu'en est-il pour l'application de la méthode de cross-entropy avec cette
 loi ?
\end_layout

\begin_layout Standard
Dans cette nouvelle application on a toujours 
\begin_inset Formula $n$
\end_inset

 boules et 
\begin_inset Formula $m$
\end_inset

 couleurs, mais 
\begin_inset Formula $m\ge n$
\end_inset

 et on considère qu'une couleur ne peut apparaitre qu'une fois.
 La loi est permutation est :
\begin_inset Formula 
\[
\pi(x)\propto\exp{(−\lambda d(x,x^{*}))}
\]

\end_inset


\end_layout

\begin_layout Standard
Avec 
\begin_inset Formula $\lambda$
\end_inset

 et 
\begin_inset Formula $x^{*}$
\end_inset

 à déterminer.
\end_layout

\begin_layout Standard
On a 
\begin_inset Formula $\mathcal{X}=\left\{ (\sigma_{1},\dots,\sigma_{n})\mathrel{}\middle|\mathrel{}\sigma_{i}\in\llbracket0,m\rrbracket\text{ deux à deux différents}\right\} \subset\left\{ 1,2,\dots,m\right\} ^{n}$
\end_inset


\end_layout

\begin_layout Standard
Soit 
\begin_inset Formula $X\in\mathcal{X}$
\end_inset

, on a :
\begin_inset Formula 
\[
f_{X}(x)\propto\exp{(−\lambda d(x,x^{*}))}
\]

\end_inset


\end_layout

\begin_layout Standard
On prend maintenant un échantillon de taille 
\begin_inset Formula $N$
\end_inset

, 
\begin_inset Formula $X_{1},\dots,X_{N}\overset{i.i.d}{\sim}X$
\end_inset

.
 La vraisemblance s'écrit 
\begin_inset Formula 
\[
f(X_{1},\dots,X_{N};\lambda,x^{*})\propto\prod_{i=1}^{N}\exp{(−\lambda d(X_{i},x^{*}))}
\]

\end_inset


\end_layout

\begin_layout Standard
Le programme de maximisation s'écrit de la façon suivante :
\begin_inset Formula 
\[
\underset{\lambda,x^{*}}{\max}\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\ln f(X_{i};\lambda,x^{*})=\underset{\lambda,x^{*}}{\min}\sum_{i=1}^{N}\1_{\{S(X_{i})\geq\hat{\gamma}_{t}\}}\lambda d(X_{i},x^{*})
\]

\end_inset


\end_layout

\begin_layout Standard
Il y a donc 
\begin_inset Formula $n+1$
\end_inset

 paramètres
\end_layout

\begin_layout Standard
La distance de Hamming n'étant pas différentiable, on ne peut trouver une
 réponse analytique.
 On va donc utiliser une méthode d'approximation pour estimer les paramètres.
 Comme souligné dans la partie 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
label{sec:emv}
\end_layout

\end_inset

, cela revient à calculer l'estimateur de maximum de vraisemblance sur les
 observations qui ont un score plus grand que 
\begin_inset Formula $\hat{\gamma}_{t}.$
\end_inset


\end_layout

\end_body
\end_document
